using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.Networking; using UnityEngine.UI; using System.Net; using System.IO; using System; using LitJson;    public class GetSave : MonoBehaviour {     readonly string URL = "https://6mur5vhowg.execute-api.us-east-1.amazonaws.com/2021-01-02/ranking/";     private int savedChapter;     public static bool infoGetDone = false;     public static List<float> stageClearTime = new List<float>();     const int MAX_CHAPTER = 21;     // Start is called before the first frame update     void Start()     {         infoGetDone = false;         GameObject.Find("Chapter1").GetComponent<Image>().color = new Color(255, 255, 255, 255);         GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<Image>().color = new Color(255, 255, 255, 255);         GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<SavePlay>().enabled = true;         StartCoroutine(GetStage());     }      IEnumerator GetStage()     {          UnityWebRequest www = UnityWebRequest.Get(URL + FirebaseLogin.Email);          yield return www.SendWebRequest();          if (www.result == UnityWebRequest.Result.ConnectionError)         {             //Debug.LogError(www.error);             StartCoroutine(GetStage());         }         else         {             stageClearTime.Clear();             JsonData userData = JsonMapper.ToObject(www.downloadHandler.text);             //int count = userData.Count;                //JsonData itemName = userData["name"];             //JsonData itemStage = userData["stage"];             //JsonData itemClearTime = userData["clearTime"];             JsonData itemSaveStage = userData["saveStage"];             savedChapter = (itemSaveStage.Count-1)/3;               //savedChapter = 5;             // clear한 스테이지 투명도 조절             if (savedChapter != 0)             {                 for (int i = 1; i <= savedChapter; i++)                 {                     // 클리어한 Chapter이미지 모두 활성화                     GameObject.Find("Chapter" + i).GetComponent<Image>().color = new Color(255, 255, 255, 255);                     foreach (Transform child in GameObject.Find("Chapter" + i).transform.GetChild(0).transform)                     {                         if (child.name != "Text" && child.name != "ex1" && child.name != "ex2")                         {   // 클리어한 Stage 모두 활성화                             child.GetComponent<SavePlay>().enabled = true;                             child.GetComponent<Image>().color = new Color(255, 255, 255, 255);                         }                     }                 }                 if (savedChapter < MAX_CHAPTER)                 {                     // 가장 가까운 Chapter 활성화                     GameObject.Find("Chapter" + (savedChapter + 1)).GetComponent<Image>().color = new Color(255, 255, 255, 255);                      //Stage 가장 가까운 활성화                     GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<Image>().color = new Color(255, 255, 255, 255);                     GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<SavePlay>().enabled = true;                 }             }             else             {                 GameObject.Find("Chapter1").GetComponent<Image>().color = new Color(255, 255, 255, 255);                 GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<Image>().color = new Color(255, 255, 255, 255);                 GameObject.Find("Chapter" + (savedChapter + 1)).transform.GetChild(0).GetChild(0).GetComponent<SavePlay>().enabled = true;             }               for (int i = 0; i < itemSaveStage.Count; i++)             {                 JsonData clearTimeItem = itemSaveStage[i];                 JsonData itemStageClearTime = clearTimeItem["stageClearTime"];                 stageClearTime.Add(Convert.ToSingle(itemStageClearTime.ToString()));                       }             infoGetDone = true;             Debug.Log("로딩 완료!");              //GameObject.Find("StageManager").GetComponent<StageManager>().saveStage=saveStage;             /*             for (int i = 0; i < stageClearTime.Count; i++)                 userName.text += "\n" + stageClearTime[i].ToString();             */         }               } } 