using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.Networking; using UnityEngine.UI; using System.Net; using System.IO; using System; using LitJson;  public class WWWGET : MonoBehaviour {          public class SendData     {         public string name;         public int stage;         public float clearTime;         public string email;         public string stageIndex;         public string stageClearTime;         public string saveStage;     }           public class MembersData     {         public string name;         public int stage;         public float clearTime;         public SaveData saveStage;     }      public class ServerData     {         public List<MembersData> members;     }          public class SaveData     {         public int stageIndex;         public float stageClearTime;         }           public GameObject m_rankPrefab;     public Transform m_contentRoot;      readonly string URL = "https://6mur5vhowg.execute-api.us-east-1.amazonaws.com/2021-01-02/ranking";       void Start()     {         // Send();         StartCoroutine(GetRequest());      }          IEnumerator GetRequest()     {         UnityWebRequest www = UnityWebRequest.Get(URL);         yield return www.SendWebRequest();                  if (www.result == UnityWebRequest.Result.ConnectionError)         {             //Debug.LogError(www.error);             StartCoroutine(GetRequest());         }         else         {             /*             Debug.Log(www.downloadHandler.text);             ServerData serverData = JsonMapper.ToObject<ServerData>(www.downloadHandler.text);             int count = serverData.members.Count;             */             JsonData userData  = JsonMapper.ToObject(www.downloadHandler.text);             int count = userData.Count;             //int count = memberData.Count;             for (int i = 0; i < count; i++)             {                 /*                 MembersData membersData = serverData.members[i];                 Debug.Log(membersData.name);                 */                                  JsonData user = userData[i];                 JsonData itemName = user["name"];                 JsonData itemStage = user["stage"];                 JsonData itemClearTime = user["clearTime"];                 //JsonData itemSaveStage = user["saveStage"];                                                    string name = itemName.ToString();                 string stage = itemStage.ToString();                 string clearTime = itemClearTime.ToString();                 //itemStageClearTime                 //string saveStage                  GameObject obj = (GameObject)Instantiate(m_rankPrefab, Vector3.zero, Quaternion.identity);                                  obj.transform.SetParent(m_contentRoot);                 obj.transform.GetComponent<RectTransform>().localScale = new Vector3(1f, 1f, 1f);                 obj.transform.GetChild(0).GetChild(0).GetComponent<Text>().text= "#" + Convert.ToString(i+1);                 obj.transform.GetChild(1).GetChild(0).GetComponent<Text>().text = name;                 obj.transform.GetChild(2).GetChild(0).GetComponent<Text>().text = stage;                 obj.transform.GetChild(3).GetChild(0).GetComponent<Text>().text = clearTime;                                  //Rank script = obj.GetComponent<Rank>();                 //script.Setup("#"+Convert.ToString(i+1) + "\t" + name + "\t" + stage + "\t\t" + clearTime);                 /*                 Debug.Log(name);                 Debug.Log(stage);                 Debug.Log(clearTime);                 */             }          }     }      } 